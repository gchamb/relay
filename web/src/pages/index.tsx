import Head from "next/head";
import EmailDialog from "@/components/EmailDialog";

import { Button } from "@/components/ui/Button";
import { signInWithEmail, signInWithGoogle, signUpWithEmail } from "@/lib/firebase/auth";
import { useState } from "react";
import { FirebaseError } from "firebase/app";
import { transformError } from "@/lib/firebase/helpers";
import { useRouter } from "next/router";

export default function App() {
  const router = useRouter();
  const [error, setError] = useState<{ method: "GOOGLE" | "EMAIL"; error: string } | undefined>();

  const signIn = async (
    data: { method: "EMAIL"; option: "Sign Up" | "Sign In"; email: string; password: string } | { method: "GOOGLE" }
  ) => {
    try {
      if (data.method === "EMAIL") {
        const { email, password } = data;

        if (data.option === "Sign In") {
          await signInWithEmail(email, password);
        } else {
          await signUpWithEmail(email, password);
        }
      } else {
        await signInWithGoogle();
      }

      // redirect to home
      router.push("/home");
    } catch (error: unknown) {
      if (error instanceof FirebaseError) {
        setError(transformError(error.code));
      } else {
        setError(transformError(String(error)));
      }
    }
  };
  return (
    <>
      <Head>
        <title>Relay</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col h-full justify-center items-center gap-10">
        <div>
          <h1 className="text-5xl font-semibold">Relay</h1>
          <p>Challenge Yourself. Challenge Your Mind.</p>
        </div>
        <div className="flex flex-col justify-evenly gap-5 md:flex-row lg:flex-row">
          <Button variant="default" onClick={() => signIn({ method: "GOOGLE" })}>
            Sign in with Google
          </Button>

          <EmailDialog
            onClick={(email, password, option) => signIn({ method: "EMAIL", email, password, option })}
            error={error?.method === "EMAIL" ? error.error : undefined}
            resetError={() => setError(undefined)}
          />
        </div>
      </div>
    </>
  );
}
