name: CI/CD

on:
  push:
  workflow_dispatch:

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install Node Dependencies
        run: npm ci

      - name: Check Prettier
        run: npm run prettier

  lint-functions:
    name: Lint Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix functions ci

      - name: Lint
        run: npm --prefix functions run lint

  build-functions:
    name: Build Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix functions ci

      - name: Build
        run: npm --prefix functions run build

  lint-web:
    name: Lint Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix web ci

      - name: Lint
        run: npm --prefix web run lint

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix web ci

      - name: Build
        run: npm --prefix web run build

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    needs: [prettier, lint-functions, build-functions, lint-web, build-web]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            client/package-lock.json
            functions/package-lock.json
      - name: Install Node Dependencies
        run: |
          npm --prefix functions ci
          npm --prefix client ci
      - name: Build Functions
        run: npm --prefix functions run build

      - name: Build Web
        run: npm --prefix web run build

      - name: Install firebase
        run: npm i -g firebase-tools

      - name: Deploy
        run: firebase deploy --project default --message "${{ github.event.head_commit.message }}" --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    needs: [prettier, lint-functions, build-functions, lint-web, build-web]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            client/package-lock.json
            functions/package-lock.json
      - name: Install Node Dependencies
        run: |
          npm --prefix functions ci
          npm --prefix client ci
      - name: Build Functions
        run: npm --prefix functions run build

      - name: Build Web
        run: npm --prefix web run build

      - name: Install firebase
        run: npm i -g firebase-tools

      - name: Deploy
        run: firebase deploy --project prod --message "${{ github.event.head_commit.message }}" --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
